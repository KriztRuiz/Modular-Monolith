name: frontend-deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-deploy.yml'
  pull_request:
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-deploy.yml'
  workflow_dispatch:

concurrency:
  group: frontend-deploy-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      CI: true
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 22 (requerido por Vite 7)
        uses: actions/setup-node@v4
        with:
          node-version: '22.12.0'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Show Node & npm versions
        run: |
          node -v
          npm -v

      - name: Install deps
        run: npm ci

      - name: Build (Vite)
        run: npm run build

      - name: Upload build artifact (debug opcional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist
          if-no-files-found: warn
          retention-days: 7

      # ðŸ”— Forzar link del proyecto Vercel para evitar "Could not retrieve Project Settings"
      - name: Prepare Vercel link
        if: github.event_name != 'pull_request'
        run: |
          rm -rf .vercel
          mkdir -p .vercel
          printf '{"projectId":"%s","orgId":"%s"}' "${{ secrets.VERCEL_PROJECT_ID }}" "${{ secrets.VERCEL_ORG_ID }}" > .vercel/project.json
          echo "Created .vercel/project.json"
          cat .vercel/project.json

      - name: Install Vercel CLI
        if: github.event_name != 'pull_request'
        run: |
          npm i -g vercel@latest
          vercel --version

      - name: Vercel pull (production settings)
        if: github.event_name != 'pull_request'
        run: vercel pull --yes --environment=production --token ${{ secrets.VERCEL_TOKEN }}

      - name: Vercel build (prebuilt)
        if: github.event_name != 'pull_request'
        run: vercel build --token ${{ secrets.VERCEL_TOKEN }}

      - name: Vercel deploy (prod)
        if: github.event_name != 'pull_request'
        run: vercel deploy --prebuilt --prod --token ${{ secrets.VERCEL_TOKEN }}
